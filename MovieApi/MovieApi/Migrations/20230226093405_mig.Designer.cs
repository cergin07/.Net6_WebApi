// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieApi.Contexts;

#nullable disable

namespace MovieApi.Migrations
{
    [DbContext(typeof(MovieDbContext))]
    [Migration("20230226093405_mig")]
    partial class mig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MovieApi.Models.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Creator")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Modifier")
                        .HasColumnType("int");

                    b.Property<string>("MovieImageUrl")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MovieTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MovieType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_Movies");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTimeOffset(new DateTime(2023, 2, 26, 12, 34, 3, 972, DateTimeKind.Unspecified).AddTicks(6240), new TimeSpan(0, 3, 0, 0, 0)),
                            Creator = 0,
                            ModifiedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Modifier = 0,
                            MovieImageUrl = "src/images/Esaretin_bedeli_img.jpg",
                            MovieTitle = "Esaretin Bedeli",
                            MovieType = "Dram/Aksiyon"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTimeOffset(new DateTime(2023, 2, 26, 12, 34, 3, 987, DateTimeKind.Unspecified).AddTicks(2840), new TimeSpan(0, 3, 0, 0, 0)),
                            Creator = 0,
                            ModifiedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Modifier = 0,
                            MovieImageUrl = "src/images/Baba_img.jpg",
                            MovieTitle = "Baba",
                            MovieType = "Suç/Dram"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTimeOffset(new DateTime(2023, 2, 26, 12, 34, 3, 987, DateTimeKind.Unspecified).AddTicks(3120), new TimeSpan(0, 3, 0, 0, 0)),
                            Creator = 0,
                            ModifiedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Modifier = 0,
                            MovieImageUrl = "src/images/Dövüs_klübü_img.jpg",
                            MovieTitle = "Dövüş Klübü",
                            MovieType = "Dram"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTimeOffset(new DateTime(2023, 2, 26, 12, 34, 3, 987, DateTimeKind.Unspecified).AddTicks(3140), new TimeSpan(0, 3, 0, 0, 0)),
                            Creator = 0,
                            ModifiedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Modifier = 0,
                            MovieImageUrl = "src/images/Yesil_yol_img.jpg",
                            MovieTitle = "Yeşil Yol",
                            MovieType = "Dram"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTimeOffset(new DateTime(2023, 2, 26, 12, 34, 3, 987, DateTimeKind.Unspecified).AddTicks(3150), new TimeSpan(0, 3, 0, 0, 0)),
                            Creator = 0,
                            ModifiedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Modifier = 0,
                            MovieImageUrl = "src/images/Batman_kara_sovalye_img.jpg",
                            MovieTitle = "Batman Kara Şövalye",
                            MovieType = "Aksiyon/Macera"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
